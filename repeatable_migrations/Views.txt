create or replace view ORDER_PROCESS.ORDER__XFRM.V_CUSTOMER(
	CUSTOMER_ID,
	ADDRESS,
	PHONE_NO,
	CATEGORY,
	STATUS,
	TOTAL_ORDERS,
	TOTAL_INVOICE_AMOUNT,
	LOYALTY_POINTS,
	CREATE_DATE,
	CREATE_USER
) as
select 
	customer.CUSTOMER_ID,
	customer.ADDRESS,
	customer.PHONE_NO,
	customer.CATEGORY,
	customer.STATUS,
    COUNT(detail.ORDER_ID) AS TOTAL_ORDERS,
    SUM(detail.TOTAL_AMOUNT) AS TOTAL_INVOICE_AMOUNT,
    SUM(case
    when detail.TOTAL_AMOUNT > 1000  and customer.category = 'Gold' then 100
    when detail.TOTAL_AMOUNT > 1000  and customer.category = 'Silver' then 50
    when detail.TOTAL_AMOUNT > 1000  and customer.category = 'Bronze' then 30
    else 0
    end) as LOYALTY_POINTS,
	customer.CREATE_DATE,
	customer.CREATE_USER
FROM ORDER_PROCESS.ORDER_BASE.T_CUSTOMER customer
left join ORDER_PROCESS.ORDER__XFRM.V_SALES_ORDER_DETAIL detail
on customer.customer_id = detail.customer_id
group by customer.CUSTOMER_ID, customer.ADDRESS, customer.PHONE_NO, customer.CATEGORY, customer.STATUS, customer.LOYALTY_POINTS, customer.CREATE_DATE, customer.CREATE_USER;


create or replace view ORDER_PROCESS.ORDER__XFRM.V_SALES_ORDER_DETAIL(
	ORDER_ID,
	ORDER_DATE,
	CUSTOMER_ID,
	ITEM_ID,
	QTY,
	TOTAL_AMOUNT,
	CREATE_DATE,
	CREATE_USER,
    PRICE
) as
select 
	ORDER_ID,
	ORDER_DATE,
	CUSTOMER_ID,
	ITEM_ID,
	QTY,
	QTY * PRICE AS TOTAL_AMOUNT,
	CREATE_DATE,
	CREATE_USER,
    PRICE
 FROM ORDER_PROCESS."ORDER_BASE".T_SALES_ORDER_DETAIL;

create or replace view ORDER_PROCESS.ORDER__XFRM.V_SALES_ORDER_HDR(
	ORDER_ID,
	ORDER_DATE,
	STATUS,
	CUSTOMER_ID,
	ITEM_COUNT,
	TOTAL_AMOUNT,
	DISCOUNT,
	CREATE_DATE,
	CREATE_USER,
    COUPON_CODE
) as
select 
	header.ORDER_ID,
	header.ORDER_DATE,
	header.STATUS,
	header.CUSTOMER_ID,
	header.ITEM_COUNT,
    detail.total_amount,
    CASE
    WHEN t_customer.category = 'Gold' AND header.COUPON_CODE ='Discount' then detail.total_amount * 0.05

    WHEN t_customer.category = 'Silver' AND header.COUPON_CODE ='Discount' then detail.total_amount * 0.03

    WHEN t_customer.category = 'Bronze' AND header.COUPON_CODE ='Discount' then detail.total_amount * 0.01

    WHEN t_customer.category = 'Regular' AND header.COUPON_CODE ='Coupon_X' then detail.total_amount * 0.03

    WHEN t_customer.category = 'Regular' AND header.COUPON_CODE ='Coupon_Y' then detail.total_amount * 0.02

    WHEN t_customer.category = 'Regular' AND header.COUPON_CODE ='Coupon_Z' then detail.total_amount * 0.01

    WHEN t_customer.category IN ('Gold','Silver', 'Bronze')  AND header.COUPON_CODE ='Loyalty' then 0

    Else 0 
    END as discount,
	header.CREATE_DATE,
	header.CREATE_USER,
    header.COUPON_CODE 
 FROM ORDER_PROCESS."ORDER_BASE".T_SALES_ORDER_HEADER header
 join ORDER_PROCESS.ORDER__XFRM.V_SALES_ORDER_DETAIL detail
 on header.order_id = detail.order_id
 JOIN ORDER_PROCESS.ORDER_BASE.T_CUSTOMER t_customer
 ON header.CUSTOMER_ID = t_customer.CUSTOMER_ID;


create or replace view ORDER_PROCESS.ORDER__XFRM.V_PROMOTION(
	PROMOTION_ID,
	CUSTOMER_CATEGORY,
	PROMOTION_TYPE,
	PROMOTION_VALUE,
	COMMENT
) as
select * FROM ORDER_PROCESS."ORDER_BASE".T_PROMOTION;

create or replace view ORDER_PROCESS.ORDER__ANALYSIS.V_INVOICE(
	ORDER_ID,
	ORDER_DATE,
	INVOICE_DATE,
	TAX_AMOUNT,
	TOTAL_AMOUNT,
	DISCOUNT,
	FINAL_INVOICE_AMT,
	CUSTOMER_ID,
	CREATE_DATE,
	CREATE_USER
) as
select * from order_process."ORDER_BASE".T_INVOICE;
